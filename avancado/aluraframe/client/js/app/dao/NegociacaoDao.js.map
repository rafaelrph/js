{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","cursor","openCursor","negociacoes","atual","result","registro","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAaA,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;8CAESC,U,EAAY;AAAA;;AAClB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,MAAKP,MAA1E,EAAkFQ,GAAlF,CAAsFP,UAAtF,CAAd;AACAI,oCAAQI,SAAR,GAAoB,UAACC,CAAD;AAAA,uCAAOP,SAAP;AAAA,6BAApB;AACAE,oCAAQM,OAAR,GAAkB,UAACD,CAAD,EAAO;AACrBE,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAPM,CAAP;AAQH;;;6CAEQ;AAAA;;AACL,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,OAAKP,MAA1E,EAAkFiB,UAAlF,EAAb;AACA,gCAAIC,cAAc,EAAlB;AACAF,mCAAOP,SAAP,GAAmB,UAACC,CAAD,EAAO;AACtB,oCAAIS,QAAQT,EAAEI,MAAF,CAASM,MAArB;AACA,oCAAGD,KAAH,EAAU;AACN,wCAAIE,WAAWF,MAAMG,KAArB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,SAASI,KAAxB,EAA+BJ,SAASK,WAAxC,EAAqDL,SAASM,MAA9D,CAAjB;AACAR,0CAAMS,QAAN;AACH,iCAJD,MAIO;AACHzB,4CAAQe,WAAR;AACH;AACJ,6BATD;AAUAF,mCAAOL,OAAP,GAAiB,UAACD,CAAD,EAAO;AACpBN,uCAAO,yCAAP;AACH,6BAFD;AAGH,yBAhBM,CAAP;AAiBH;;;mDAEc;AAAA;;AACX,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EAAyDO,WAAzD,CAAqE,OAAKP,MAA1E,EAAkF6B,KAAlF,EAAb;AACAb,mCAAOP,SAAP,GAAmB,UAACC,CAAD;AAAA,uCAAOP,SAAP;AAAA,6BAAnB;AACAa,mCAAOL,OAAP,GAAiB,UAACD,CAAD;AAAA,uCAAON,OAAO,gDAAP,CAAP;AAAA,6BAAjB;AACH,yBAJM,CAAP;AAKH","file":"NegociacaoDao.js","sourcesContent":["export class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = \"negociacoes\";\r\n    }\r\n\r\n    adicionar(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).add(negociacao);\r\n            request.onsuccess = (e) => resolve();\r\n            request.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível inserir a negociação.');\r\n            };\r\n        });\r\n    }\r\n\r\n    listar() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).openCursor();\r\n            let negociacoes = [];\r\n            cursor.onsuccess = (e) => {\r\n                let atual = e.target.result;\r\n                if(atual) {\r\n                    let registro = atual.value;\r\n                    negociacoes.push(new Negociacao(registro._data, registro._quantidade, registro._valor));\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n            cursor.onerror = (e) => {\r\n                reject(\"Não foi possível listar as negociações.\");\r\n            };\r\n        });\r\n    }\r\n\r\n    removerTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection.transaction([this._store], 'readwrite').objectStore(this._store).clear();\r\n            cursor.onsuccess = (e) => resolve();\r\n            cursor.onerror = (e) => reject(\"Não foi possível remover todas as negociações.\");\r\n        });\r\n    } \r\n\r\n}"]}